name: Go Build/Test

on:
  workflow_call:

jobs:
  Go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@4 # v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v5
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
          args: --timeout=6m

      - name: Build
        run: go build ./...

      - name: Test
        run: go test ./... -race

      - name: Test 'cli' example
        env:
          SCAFFOLD_NO_CLOBBER: true
          SCAFFOLD_OUT: "gen"
          SCAFFOLD_DIR: ".scaffold,.examples"
        run: |
          go run main.go new --test cli
          go run ./gen/main.go hello

          # Run the command and store the output in a variable
          output=$(gen run ./gen/main.go hello)

          # Define the expected output
          expected_output="Hello, your favorite colors are red, green"

          # Compare the actual output with the expected output
          if [ "$output" = "$expected_output" ]; then
              echo "Test passed: Output matches the expected string."
              exit 0
          else
              echo "Test failed: Output does not match the expected string."
              exit 1
          fi
