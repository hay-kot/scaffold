{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "InputConfirm": {
            "additionalProperties": false,
            "properties": {
                "confirm": {
                    "description": "message to be displayed to the user, this is the same as the `message` property, but converts the value into a boolean.",
                    "type": "string"
                },
                "default": {
                    "description": "default is the default value that will be used if the user does not provide a value.",
                    "type": "boolean"
                },
                "description": {
                    "description": "description is an optional message that can be displayed to the user. This is a secondary label that can provide some more context to the user.",
                    "type": "string"
                }
            },
            "required": [
                "confirm"
            ],
            "type": "object"
        },
        "InputSelect": {
            "additionalProperties": false,
            "properties": {
                "default": {
                    "description": "default is the default value that will be used if the user does not provide a value.",
                    "type": "string"
                },
                "description": {
                    "description": "description is an optional message that can be displayed to the user. This is a secondary label that can provide some more context to the user.",
                    "type": "string"
                },
                "message": {
                    "description": "message to be displayed to the user, this is the primary message shown to the user. You can think of this as the label for the input/prompt.",
                    "type": "string"
                },
                "multi": {
                    "const": false,
                    "type": "boolean"
                },
                "options": {
                    "description": "options is an array of strings that will be used to populate the select options.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "message",
                "options"
            ],
            "type": "object"
        },
        "InputSelectMulti": {
            "additionalProperties": false,
            "properties": {
                "default": {
                    "description": "default is the default value that will be used if the user does not provide a value.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "description is an optional message that can be displayed to the user. This is a secondary label that can provide some more context to the user.",
                    "type": "string"
                },
                "message": {
                    "description": "message to be displayed to the user, this is the primary message shown to the user. You can think of this as the label for the input/prompt.",
                    "type": "string"
                },
                "multi": {
                    "const": true,
                    "description": "multi (when true) modifies the prompt to allow the user to provide multiple answers. Only some prompt types support this option.",
                    "type": "boolean"
                },
                "options": {
                    "description": "options is an array of strings that will be used to populate the select options.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "message",
                "multi",
                "options"
            ],
            "type": "object"
        },
        "InputText": {
            "additionalProperties": false,
            "properties": {
                "default": {
                    "description": "default is the default value that will be used if the user does not provide a value.",
                    "type": "string"
                },
                "description": {
                    "description": "description is an optional message that can be displayed to the user. This is a secondary label that can provide some more context to the user.",
                    "type": "string"
                },
                "message": {
                    "description": "message to be displayed to the user, this is the primary message shown to the user. You can think of this as the label for the input/prompt.",
                    "type": "string"
                }
            },
            "required": [
                "message"
            ],
            "type": "object"
        },
        "InputTextLoop": {
            "additionalProperties": false,
            "properties": {
                "default": {
                    "description": "default is the default value that will be used if the user does not provide a value.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "description is an optional message that can be displayed to the user. This is a secondary label that can provide some more context to the user.",
                    "type": "string"
                },
                "loop": {
                    "description": "loop (when true) will keep asking the user for input until they provide an empty string. Only some prompt types support this option.",
                    "type": "boolean"
                },
                "message": {
                    "description": "message to be displayed to the user, this is the primary message shown to the user. You can think of this as the label for the input/prompt.",
                    "type": "string"
                }
            },
            "required": [
                "loop",
                "message"
            ],
            "type": "object"
        },
        "InputTextMulti": {
            "additionalProperties": false,
            "properties": {
                "default": {
                    "description": "default is the default value that will be used if the user does not provide a value.",
                    "type": "string"
                },
                "description": {
                    "description": "description is an optional message that can be displayed to the user. This is a secondary label that can provide some more context to the user.",
                    "type": "string"
                },
                "message": {
                    "description": "message to be displayed to the user, this is the primary message shown to the user. You can think of this as the label for the input/prompt.",
                    "type": "string"
                },
                "multi": {
                    "const": true,
                    "description": "multi (when true) modifies the prompt to allow the user to provide multiple answers. Only some prompt types support this option.",
                    "type": "boolean"
                }
            },
            "required": [
                "message",
                "multi"
            ],
            "type": "object"
        },
        "Prompt": {
            "anyOf": [
                {
                    "$ref": "#/definitions/InputText"
                },
                {
                    "$ref": "#/definitions/InputTextMulti"
                },
                {
                    "$ref": "#/definitions/InputTextLoop"
                },
                {
                    "$ref": "#/definitions/InputConfirm"
                },
                {
                    "$ref": "#/definitions/InputSelect"
                },
                {
                    "$ref": "#/definitions/InputSelectMulti"
                }
            ]
        }
    },
    "properties": {
        "computed": {
            "additionalProperties": {
                "type": "string"
            },
            "description": "computed is a map of values that will be computed based on the answers provided by the user",
            "type": "object"
        },
        "features": {
            "items": {
                "additionalProperties": false,
                "properties": {
                    "globs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "globs",
                    "value"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "inject": {
            "items": {
                "additionalProperties": false,
                "properties": {
                    "at": {
                        "description": "The location to inject the code/text. This is evaluated using the strings.Contains function. Note that ALL matches will be replaced.",
                        "type": "string"
                    },
                    "mode": {
                        "description": "The mode to use when injecting the code. This can be one of the following:",
                        "enum": [
                            "after",
                            "before"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "description": "The relative path to the file to inject into from the output directory",
                        "type": "string"
                    },
                    "template": {
                        "description": "The code/text to inject into the file",
                        "type": "string"
                    }
                },
                "required": [
                    "at",
                    "name",
                    "path",
                    "template"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "messages": {
            "additionalProperties": false,
            "properties": {
                "post": {
                    "description": "post is a message that will be displayed after the template has been generated. This field supports markdown syntax",
                    "type": "string"
                },
                "pre": {
                    "description": "pre is a message that will be displayed before the questions are asked. This field supports markdown syntax",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "presents": {
            "additionalProperties": {
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object"
            },
            "description": "presets is a map of key/value pairs that can be used to provide default values for the questions. Generally, this is only used for testing scaffolds, but could be used for other purposes.",
            "type": "object"
        },
        "questions": {
            "description": "questions are the prompts that will be used to gather information from the user before generating the project",
            "items": {
                "additionalProperties": false,
                "properties": {
                    "group": {
                        "description": "group is an optional key that can be used to group questions together in a shared view.",
                        "type": "string"
                    },
                    "name": {
                        "description": "name is the key that will be used to store the answer provided by the user. This key will be used to reference the answers in the template.",
                        "type": "string"
                    },
                    "prompt": {
                        "$ref": "#/definitions/Prompt",
                        "description": "prompt is the type of prompt that will be used to ask the user for input."
                    },
                    "required": {
                        "description": "required (when true) will require the user to provide an answer",
                        "type": "boolean"
                    },
                    "when": {
                        "description": "when is a conditiona template that is evaluated to determine if the question should be asked.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "prompt"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "rewrites": {
            "items": {
                "additionalProperties": false,
                "properties": {
                    "from": {
                        "description": "The path to the template file",
                        "type": "string"
                    },
                    "to": {
                        "description": "a path to the destination file, this field supports template syntax",
                        "type": "string"
                    }
                },
                "required": [
                    "from",
                    "to"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "skips": {
            "description": "skips is an array of globs that will be used to skip template rendering for files that match the glob.",
            "items": {
                "type": "string"
            },
            "type": "array"
        }
    },
    "required": [
        "questions"
    ],
    "type": "object"
}

